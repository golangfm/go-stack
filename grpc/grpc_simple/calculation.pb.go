// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculation.proto

package grpc_simple

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CalReq struct {
	Valx                 *int32   `protobuf:"varint,1,req,name=valx" json:"valx,omitempty"`
	Valy                 *int32   `protobuf:"varint,2,req,name=valy" json:"valy,omitempty"`
	Op                   *int32   `protobuf:"varint,3,req,name=op" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalReq) Reset()         { *m = CalReq{} }
func (m *CalReq) String() string { return proto.CompactTextString(m) }
func (*CalReq) ProtoMessage()    {}
func (*CalReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculation_bc9e9918a59f5571, []int{0}
}
func (m *CalReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalReq.Unmarshal(m, b)
}
func (m *CalReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalReq.Marshal(b, m, deterministic)
}
func (dst *CalReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalReq.Merge(dst, src)
}
func (m *CalReq) XXX_Size() int {
	return xxx_messageInfo_CalReq.Size(m)
}
func (m *CalReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CalReq.DiscardUnknown(m)
}

var xxx_messageInfo_CalReq proto.InternalMessageInfo

func (m *CalReq) GetValx() int32 {
	if m != nil && m.Valx != nil {
		return *m.Valx
	}
	return 0
}

func (m *CalReq) GetValy() int32 {
	if m != nil && m.Valy != nil {
		return *m.Valy
	}
	return 0
}

func (m *CalReq) GetOp() int32 {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return 0
}

type CalRes struct {
	Result               *int32   `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalRes) Reset()         { *m = CalRes{} }
func (m *CalRes) String() string { return proto.CompactTextString(m) }
func (*CalRes) ProtoMessage()    {}
func (*CalRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculation_bc9e9918a59f5571, []int{1}
}
func (m *CalRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalRes.Unmarshal(m, b)
}
func (m *CalRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalRes.Marshal(b, m, deterministic)
}
func (dst *CalRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalRes.Merge(dst, src)
}
func (m *CalRes) XXX_Size() int {
	return xxx_messageInfo_CalRes.Size(m)
}
func (m *CalRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CalRes.DiscardUnknown(m)
}

var xxx_messageInfo_CalRes proto.InternalMessageInfo

func (m *CalRes) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*CalReq)(nil), "grpc.simple.CalReq")
	proto.RegisterType((*CalRes)(nil), "grpc.simple.CalRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalcClient is the client API for Calc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalcClient interface {
	Calc(ctx context.Context, in *CalReq, opts ...grpc.CallOption) (*CalRes, error)
}

type calcClient struct {
	cc *grpc.ClientConn
}

func NewCalcClient(cc *grpc.ClientConn) CalcClient {
	return &calcClient{cc}
}

func (c *calcClient) Calc(ctx context.Context, in *CalReq, opts ...grpc.CallOption) (*CalRes, error) {
	out := new(CalRes)
	err := c.cc.Invoke(ctx, "/grpc.simple.Calc/Calc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalcServer is the server API for Calc service.
type CalcServer interface {
	Calc(context.Context, *CalReq) (*CalRes, error)
}

func RegisterCalcServer(s *grpc.Server, srv CalcServer) {
	s.RegisterService(&_Calc_serviceDesc, srv)
}

func _Calc_Calc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServer).Calc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.simple.Calc/Calc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServer).Calc(ctx, req.(*CalReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.simple.Calc",
	HandlerType: (*CalcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Calc",
			Handler:    _Calc_Calc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculation.proto",
}

func init() { proto.RegisterFile("calculation.proto", fileDescriptor_calculation_bc9e9918a59f5571) }

var fileDescriptor_calculation_bc9e9918a59f5571 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x4e, 0xcc, 0x49,
	0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e,
	0x2f, 0x2a, 0x48, 0xd6, 0x2b, 0xce, 0xcc, 0x2d, 0xc8, 0x49, 0x55, 0x72, 0xe0, 0x62, 0x73, 0x4e,
	0xcc, 0x09, 0x4a, 0x2d, 0x14, 0x12, 0xe2, 0x62, 0x29, 0x4b, 0xcc, 0xa9, 0x90, 0x60, 0x54, 0x60,
	0xd2, 0x60, 0x0d, 0x02, 0xb3, 0xa1, 0x62, 0x95, 0x12, 0x4c, 0x70, 0xb1, 0x4a, 0x21, 0x3e, 0x2e,
	0xa6, 0xfc, 0x02, 0x09, 0x66, 0xb0, 0x08, 0x53, 0x7e, 0x81, 0x92, 0x02, 0xd4, 0x84, 0x62, 0x21,
	0x31, 0x2e, 0xb6, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c, 0x12, 0xa8, 0x19, 0x50, 0x9e, 0x91, 0x15, 0x17,
	0x8b, 0x73, 0x62, 0x4e, 0xb2, 0x90, 0x11, 0x94, 0x16, 0xd6, 0x43, 0x72, 0x81, 0x1e, 0xc4, 0x7a,
	0x29, 0x2c, 0x82, 0xc5, 0x4a, 0x0c, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x08, 0x61, 0x4d,
	0xc0, 0x00, 0x00, 0x00,
}
